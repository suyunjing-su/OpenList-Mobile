name: Build

on:
  push:
    branches:
      - "main"
    paths-ignore:
      - "*.md"
      - "*.sh"
      - "release.yaml"
  #      - "sync_frp.yaml"
  pull_request:
    branches: ["main"]

  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version_name: ${{ steps.generate.outputs.version_name }}
      openlist_version: ${{ steps.openlist_version.outputs.openlist_version }}
      openlist_git_commit: ${{ steps.openlist_version.outputs.openlist_git_commit }}
      openlist_web_version: ${{ steps.openlist_version.outputs.openlist_web_version }}
      openlist_built_at: ${{ steps.openlist_version.outputs.openlist_built_at }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate Version Name
        id: generate
        run: |
          # Generate unified version with timestamp for entire workflow
          BASE_VERSION=$(cat openlist_version)
          TIMESTAMP=$(date +%y%m%d%H)
          VERSION_NAME="${BASE_VERSION}.${TIMESTAMP}"
          echo "version_name=${VERSION_NAME}" >> $GITHUB_OUTPUT

      - name: Download OpenList Source Code
        run: |
          cd $GITHUB_WORKSPACE/openlist-lib/scripts
          chmod +x *.sh
          ./init_openlist.sh

      - name: Extract OpenList Version Info
        id: openlist_version
        run: |
          # After init_openlist.sh, OpenList backend source is in openlist-lib/ with .git directory removed
          # We need to get version info from the latest remote tag that was cloned
          cd $GITHUB_WORKSPACE/openlist-lib/scripts
          
          # Re-fetch the tag information from remote (since .git was removed by init_openlist.sh)
          GIT_REPO="https://github.com/OpenListTeam/OpenList.git"
          OPENLIST_VERSION=$(git -c 'versionsort.suffix=-' ls-remote --exit-code --refs --sort='version:refname' --tags $GIT_REPO | tail -n 1 | cut -d'/' -f3)
          
          # Get the commit hash for this tag from remote
          OPENLIST_GIT_COMMIT=$(git ls-remote $GIT_REPO "refs/tags/${OPENLIST_VERSION}" | cut -f1 | cut -c1-7)
          
          # Get frontend version from OpenList-Frontend latest release
          OPENLIST_WEB_VERSION=$(curl -fsSL --max-time 10 "https://api.github.com/repos/OpenListTeam/OpenList-Frontend/releases/latest" | grep "tag_name" | head -n 1 | awk -F ":" '{print $2}' | sed 's/"//g;s/,//g;s/ //g' || echo "rolling")
          
          # Build timestamp
          OPENLIST_BUILT_AT=$(date +'%F %T %z')
          
          echo "openlist_version=${OPENLIST_VERSION}" >> $GITHUB_OUTPUT
          echo "openlist_git_commit=${OPENLIST_GIT_COMMIT}" >> $GITHUB_OUTPUT
          echo "openlist_web_version=${OPENLIST_WEB_VERSION}" >> $GITHUB_OUTPUT
          echo "openlist_built_at=${OPENLIST_BUILT_AT}" >> $GITHUB_OUTPUT

  android:
    needs: [version]
    runs-on: ubuntu-latest
    env:
      release_output: "${{ github.workspace }}/build/app/outputs/apk/release"
      debug_output: "${{ github.workspace }}/build/app/outputs/flutter-apk"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download OpenList Android AAR from latest build
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: sync_openlist.yaml
          name: openlist-android-aar
          path: ${{ github.workspace }}/android/app/libs/
          check_artifacts: true
          search_artifacts: true

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Init Signature (Release only)
        if: github.event_name != 'pull_request'
        run: |
          touch local.properties
          cd android
          echo ALIAS_NAME='${{ secrets.ALIAS_NAME }}' >> local.properties
          echo ALIAS_PASSWORD='${{ secrets.ALIAS_PASSWORD }}' >> local.properties
          echo KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}' >> local.properties
          echo KEY_PATH='./key.jks' >> local.properties
          # 从Secrets读取无换行符Base64解码, 然后保存到到app/key.jks
          echo ${{ secrets.KEY_STORE }} | base64 --decode > $GITHUB_WORKSPACE/android/app/key.jks

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.7'
      
      - name: Build Release APK
        if: github.event_name != 'pull_request'
        env:
          BUILD_VERSION_NAME: ${{ needs.version.outputs.version_name }}
        run: flutter build apk --split-per-abi --release --target-platform android-arm,android-arm64,android-x64
      
      - name: Build Debug APK
        if: github.event_name == 'pull_request'
        env:
          BUILD_VERSION_NAME: ${{ needs.version.outputs.version_name }}
        run: flutter build apk --split-per-abi --debug --target-platform android-arm,android-arm64,android-x64

      - name: Upload missing_rules.txt
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: "missing_rules"
          path: "${{ github.workspace }}/build/app/outputs/mapping/release/missing_rules.txt"

      - name: Set Build Paths and Version
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            OUTPUT_DIR="${{ env.debug_output }}"
            BUILD_TYPE="debug"
            echo "ver_name=${{ needs.version.outputs.version_name }}-debug" >> $GITHUB_ENV
          else
            OUTPUT_DIR="${{ env.release_output }}"
            BUILD_TYPE="release"
            echo "ver_name=${{ needs.version.outputs.version_name }}" >> $GITHUB_ENV
          fi
          
          echo "output_path=$OUTPUT_DIR" >> $GITHUB_ENV
          echo "build_type=$BUILD_TYPE" >> $GITHUB_ENV

      - name: Upload App To Artifact arm64-v8a
        if: success () || failure ()
        uses: actions/upload-artifact@v4
        with:
          name: "OpenList-Mobile-${{ env.ver_name }}_arm64-v8a"
          path: |
            ${{ env.output_path }}/*arm64-v8a*.apk
            ${{ env.output_path }}/*v8a.apk

      - name: Upload App To Artifact arm-v7a
        if: success () || failure ()
        uses: actions/upload-artifact@v4
        with:
          name: "OpenList-Mobile-${{ env.ver_name }}_arm-v7a"
          path: |
            ${{ env.output_path }}/*armeabi-v7a*.apk
            ${{ env.output_path }}/*v7a.apk

      - name: Upload App To Artifact x86_64
        if: success () || failure ()
        uses: actions/upload-artifact@v4
        with:
          name: "OpenList-Mobile-${{ env.ver_name }}_x86_64"
          path: |
            ${{ env.output_path }}/*x86_64*.apk
            ${{ env.output_path }}/*x64*.apk

  ios:
    needs: [version]
    runs-on: macos-latest
    env:
      output: "${{ github.workspace }}/build/ios/ipa"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download OpenList iOS Framework from latest build
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: sync_openlist.yaml
          name: openlist-ios-xcframework
          path: ${{ github.workspace }}/ios/Frameworks/
          check_artifacts: true
          search_artifacts: true

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.7'

      - name: Build iOS App
        env:
          BUILD_VERSION_NAME: ${{ needs.version.outputs.version_name }}
        run: |
          echo "Building iOS app with CocoaPods..."
          flutter build ios --release --no-codesign

      - name: Create IPA
        run: |
          mkdir -p ${{ env.output }}
          cd build/ios/iphoneos
          mkdir Payload
          cp -r Runner.app Payload/
          zip -r ${{ env.output }}/OpenList-Mobile.ipa Payload/

      - name: Set iOS Version
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "ver_name=${{ needs.version.outputs.version_name }}-debug" >> $GITHUB_ENV
          else
            echo "ver_name=${{ needs.version.outputs.version_name }}" >> $GITHUB_ENV
          fi

      - name: Upload iOS App To Artifact
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: "OpenList-Mobile-iOS-${{ env.ver_name }}"
          path: "${{ env.output }}/OpenList-Mobile.ipa"
